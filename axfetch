#!/bin/bash

# Colors
COLOR2="\033[1;38;5;213m"
RESET="\033[0m"

# ASCII Logo (left side)
ascii_logo=(
"             @@@#@@@#@@###@               "
"         @#@#@#@@@###@@@##@@#@#@##        "
"     @#@@##@@#@             #@#@##@##     "
"     #@#@#@                    @#@@#@     "
"    @@@@         @######@@       @##@@    "
"   ##@@@       #OOOO   OOO#       @@@@@   "
"  @#@##        #OOOO#@OOOOO@       @#@#@@ "
" @@@@##        OOOO#  @OOOO#        #@##@@"
"@@@##         @OOO@     #OOO        @#@@@#"
"##            #OO@       #OO@          @##"
"@@##@#       @OO#        @OO#        #@##@"
" @@###@      ##O@         #OO@      #@@## "
"  @##@@     @###          @OO#     @#@#@  "
"   ##@@@   @###@           OO#@    @#@@@  "
"    @@@@@                        @@#@@    "
"    #@##@#@                @#@@##@##      "
"      @#####@@##@       @#@@@#####@       "
"            @#@##@@  @@##@@##             "
"                 @#####@                  "
"                   ##@                    "
)

# AxOS Banner (top-right)
banner_lines=(
"   █████╗ ██╗  ██╗ ██████╗ ███████╗"
"  ██╔══██╗╚██╗██╔╝██╔═══██╗██╔════╝"
"  ███████║ ╚███╔╝ ██║   ██║███████╗"
"  ██╔══██║ ██╔██╗ ██║   ██║╚════██║"
"  ██║  ██║██╔╝ ██╗╚██████╔╝███████║"
"  ╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝ ╚══════╝"
)

# Gather system info
OS="AxOS (Arch-based)"
KERNEL="$(uname -r)"
UPTIME="$(uptime -p)"
SHELL="$SHELL"
DE="${XDG_CURRENT_DESKTOP:-$DESKTOP_SESSION}"
TERM="$TERM"
CPU="$(grep -m1 'model name' /proc/cpuinfo | cut -d ':' -f2 | xargs)"
RAM="$(free -h | awk '/Mem:/ {print $3 "/" $2}')"
PKGS="$(pacman -Q | wc -l)"
STORAGE="$(df -h / | awk 'NR==2 {print $3 "/" $2}')"

info_lines=(
  "OS: $OS"
  "Kernel: $KERNEL"
  "Uptime: $UPTIME"
  "Shell: $SHELL"
  "DE: $DE"
  "Terminal: $TERM"
  "CPU: $CPU"
  "RAM: $RAM"
  "Packages: $PKGS"
  "Storage: $STORAGE"
)

# Determine max width of info lines
max_info_width=0
for line in "${info_lines[@]}"; do
  clean_length=$(echo -e "$line" | wc -c)
  (( clean_length > max_info_width )) && max_info_width=$clean_length
done

# Padding for box
box_inner_width=$((max_info_width + 2))  # 1 space padding left and right
border_top="╭$(printf '─%.0s' $(seq 1 $box_inner_width))──╮"
border_bot="╰$(printf '─%.0s' $(seq 1 $box_inner_width))──╯"

# Compose system info box (as lines)
sys_box=()
sys_box+=("$border_top")
for line in "${info_lines[@]}"; do
  printf -v padded_line "│ %-*s │" "$box_inner_width" "$line"
  sys_box+=("$padded_line")
done
sys_box+=("$border_bot")

# Compose right-hand side block (banner + info box)
right_panel=()
for line in "${banner_lines[@]}"; do right_panel+=("$line"); done
for line in "${sys_box[@]}"; do right_panel+=("$line"); done

# Merge logo + right panel
echo
total_lines=$(( ${#ascii_logo[@]} > ${#right_panel[@]} ? ${#ascii_logo[@]} : ${#right_panel[@]} ))
for ((i = 0; i < total_lines; i++)); do
  left="${ascii_logo[i]:-$(printf ' %.0s' {1..33})}"
  right="${right_panel[i]:-}"
  printf "${COLOR2}%-33s  %s${RESET}\n" "$left" "$right"
done
echo
